{"version":3,"sources":["services/api.js","components/Searchbar/Searchbar.js","components/ImageGallery/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","components/Button/Button.js","components/Loader/Loader.js","components/Modal/Modal.js","components/App/App.js","index.js"],"names":["searchQuery","page","axios","get","then","res","data","hits","Searchbar","state","inputValue","searchChange","e","preventDefault","setState","target","value","searchSubmit","props","onSubmit","className","this","type","autoComplete","autoFocus","placeholder","onChange","Component","PropTypes","func","isRequired","ImageGalleryItem","tags","webformatURL","id","onClickItem","src","alt","onClick","imgId","ImageGallery","items","onOpenItem","onItemClick","map","item","key","Button","onClickBtn","App","color","height","width","timeout","React","Modal","handleKeyDown","code","onCloseItem","window","addEventListener","removeEventListener","largeImageURL","loading","galleryItems","showModal","onScroll","scrollTo","top","document","documentElement","scrollHeight","behavior","nextPage","fetchItems","apiSearch","prevState","catch","finally","handleSearchApi","query","togleModal","openModal","itemsId","itemId","find","prevProps","length","ReactDOM","render","querySelector"],"mappings":"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","file":"static/js/main.f99d6a56.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst key = \"17751267-16ded02a741af1cdfc94a2144\";\r\nconst url = \"https://pixabay.com/api/\";\r\n\r\nconst apiSearch = (searchQuery, page) => {\r\n  return axios\r\n    .get(\r\n      `${url}?q=${searchQuery}&page=${page}&key=${key}&image_type=photo&orientation=horizontal&per_page=12`\r\n    )\r\n    .then((res) => res.data.hits);\r\n};\r\n\r\nexport default { apiSearch };\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass Searchbar extends Component {\r\n  static props = {\r\n    onSubmit: PropTypes.func.isRequired,\r\n  };\r\n\r\n  state = {\r\n    inputValue: \"\",\r\n  };\r\n\r\n  searchChange = (e) => {\r\n    e.preventDefault();\r\n\r\n    this.setState({ inputValue: e.target.value });\r\n  };\r\n\r\n  searchSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    this.props.onSubmit(this.state.inputValue);\r\n    this.setState({ inputValue: \"\" });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <header className=\"Searchbar\">\r\n        <form className=\"SearchForm\" onSubmit={this.searchSubmit}>\r\n          <button type=\"submit\" className=\"SearchForm-button\">\r\n            <span className=\"SearchForm-button-label\">Search</span>\r\n          </button>\r\n\r\n          <input\r\n            className=\"SearchForm-input\"\r\n            type=\"text\"\r\n            autoComplete=\"off\"\r\n            autoFocus\r\n            placeholder=\"Search images and photos\"\r\n            value={this.state.inputValue}\r\n            onChange={this.searchChange}\r\n          />\r\n        </form>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Searchbar;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst ImageGalleryItem = ({ tags, webformatURL, id, onClickItem }) => {\r\n  const imgId = (id) => {\r\n    onClickItem(id);\r\n  };\r\n\r\n  return (\r\n    <li className=\"ImageGalleryItem\">\r\n      <img\r\n        src={webformatURL}\r\n        alt={tags}\r\n        className=\"ImageGalleryItem-image\"\r\n        onClick={() => imgId(id)}\r\n      />\r\n    </li>\r\n  );\r\n};\r\n\r\nImageGalleryItem.propTypes = {\r\n  tags: PropTypes.string.isRequired,\r\n  webformatURL: PropTypes.string.isRequired,\r\n  id: PropTypes.number.isRequired,\r\n  onClickItem: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ImageGalleryItem;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport ImageGalleryItem from \"./ImageGalleryItem\";\r\n\r\nconst ImageGallery = ({ items, onOpenItem, onItemClick }) => {\r\n  return (\r\n    <ul className=\"ImageGallery\" onClick={onOpenItem}>\r\n      {items.map((item) => {\r\n        const { id } = item;\r\n        return (\r\n          <ImageGalleryItem key={id} {...item} onClickItem={onItemClick} />\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n};\r\n\r\nImageGallery.propTypes = {\r\n  items: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      tags: PropTypes.string.isRequired,\r\n      webformatURL: PropTypes.string.isRequired,\r\n      id: PropTypes.number.isRequired,\r\n    })\r\n  ).isRequired,\r\n  onOpenItem: PropTypes.func.isRequired,\r\n  onItemClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ImageGallery;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction Button({ onClickBtn }) {\r\n  return (\r\n    <button className=\"Button\" type=\"button\" onClick={onClickBtn}>\r\n      Load More\r\n    </button>\r\n  );\r\n}\r\n\r\nButton.propTypes = {\r\n  onClickBtn: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Button;\r\n","import React from \"react\";\r\n\r\nimport Loader from \"react-loader-spinner\";\r\n\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\n\r\nexport default class App extends React.Component {\r\n  //other logic\r\n  render() {\r\n    return (\r\n      <div className=\"spinner\">\r\n        <Loader\r\n          type=\"Oval\"\r\n          color=\"#00BFFF\"\r\n          height={40}\r\n          width={40}\r\n          timeout={3000} //3 secs\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass Modal extends Component {\r\n  static propTypes = {\r\n    onCloseItem: PropTypes.func.isRequired,\r\n    largeImageURL: PropTypes.string.isRequired,\r\n  };\r\n\r\n  componentDidMount() {\r\n    window.addEventListener(\"keydown\", this.handleKeyDown);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"keydown\", this.handleKeyDown);\r\n  }\r\n\r\n  handleKeyDown = (e) => {\r\n    if (e.code === \"Escape\") {\r\n      this.props.onCloseItem();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Overlay\">\r\n        <div className=\"Modal\">\r\n          <img src={this.props.largeImageURL} alt=\"\" />;\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Modal;\r\n","import React, { Component } from \"react\";\r\n\r\nimport apiSearch from \"../../services/api\";\r\nimport Searchbar from \"../Searchbar/Searchbar\";\r\nimport ImageGallery from \"../ImageGallery/ImageGallery\";\r\nimport Button from \"../Button/Button\";\r\nimport Loader from \"../Loader/Loader\";\r\nimport Modal from \"../Modal/Modal\";\r\n\r\nimport \"./App.css\";\r\n\r\nexport default class App extends Component {\r\n  state = {\r\n    searchQuery: \"\",\r\n    loading: false,\r\n    galleryItems: [],\r\n    page: 1,\r\n    showModal: false,\r\n    largeImageURL: \"\",\r\n  };\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    const prevQuery = prevState.searchQuery;\r\n    const nextQuery = this.state.searchQuery;\r\n\r\n    if (prevQuery !== nextQuery) {\r\n      this.fetchItems();\r\n    }\r\n\r\n    if (prevState.page !== this.state.page) {\r\n      this.fetchItems();\r\n    }\r\n\r\n    this.onScroll();\r\n  }\r\n\r\n  onScroll = () => {\r\n    window.scrollTo({\r\n      top: document.documentElement.scrollHeight,\r\n      behavior: \"smooth\",\r\n    });\r\n  };\r\n\r\n  nextPage = () => {\r\n    this.setState(({ page }) => {\r\n      return { page: page + 1 };\r\n    });\r\n  };\r\n\r\n  fetchItems = () => {\r\n    const { searchQuery, page } = this.state;\r\n    this.setState({ loading: true });\r\n\r\n    apiSearch\r\n      .apiSearch(searchQuery, page)\r\n      .then((galleryItems) => {\r\n        this.setState((prevState) => ({\r\n          galleryItems: [...prevState.galleryItems, ...galleryItems],\r\n        }));\r\n      })\r\n      .catch((e) => {\r\n        this.setState({ e });\r\n      })\r\n      .finally(() => {\r\n        this.setState({ loading: false });\r\n      });\r\n  };\r\n\r\n  handleSearchApi = (query) => {\r\n    this.setState({ searchQuery: query, page: 1, galleryItems: [] });\r\n  };\r\n\r\n  togleModal = () => {\r\n    this.setState({\r\n      showModal: !this.state.showModal,\r\n    });\r\n  };\r\n\r\n  openModal = (itemsId) => {\r\n    const itemId = this.state.galleryItems.find(({ id }) => id === itemsId);\r\n\r\n    this.setState({ largeImageURL: itemId.largeImageURL });\r\n  };\r\n\r\n  render() {\r\n    const { loading, galleryItems, showModal, largeImageURL } = this.state;\r\n\r\n    return (\r\n      <>\r\n        <Searchbar onSubmit={this.handleSearchApi} />\r\n        {showModal && (\r\n          <Modal\r\n            {...galleryItems}\r\n            onCloseItem={this.togleModal}\r\n            largeImageURL={largeImageURL}\r\n          />\r\n        )}\r\n        {galleryItems.length > 0 && (\r\n          <ImageGallery\r\n            items={galleryItems}\r\n            onOpenItem={this.togleModal}\r\n            onItemClick={this.openModal}\r\n          />\r\n        )}\r\n        {loading && <Loader />}\r\n        {galleryItems.length > 0 && !loading && (\r\n          <Button onClickBtn={this.nextPage} />\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport App from \"./components/App/App\";\r\n\r\nReactDOM.render(<App className=\"App\" />, document.querySelector(\"#root\"));\r\n"],"sourceRoot":""}